services:
  api:
    container_name: webapp_api
    build:
      context: .
      dockerfile: backend/api/Dockerfile
    restart: on-failure
    command: python -m backend.api
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  tg_bot:
    container_name: webapp_tg_bot
    build:
      dockerfile: backend/tg_bot/Dockerfile
      context: .
    command: python -m backend.tg_bot
    restart: on-failure
    depends_on:
      - postgres
      - redis

  frontend:
    container_name: webapp_frontend
    build:
      context: .
      dockerfile: frontend/Dockerfile
    command: http-server dist
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      - api

  postgres:
    container_name: webapp_db
    image: postgres:16-alpine
    restart: on-failure
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: db
      PGDATA: /var/lib/postgresql/data/db_data/
    ports:
      - "5432:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data/db_data/

  redis:
    container_name: webapp_redis
    image: redis:latest
    restart: on-failure
    command:
      - redis-server

  nginx:
    container_name: webapp_nginx
    build: nginx
    restart: on-failure
    ports:
      - "80:80"
    depends_on:
      - api